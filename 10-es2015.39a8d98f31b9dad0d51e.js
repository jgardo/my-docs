(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{"4CMq":function(e,r,t){e.exports=function(){function e(){}return e.prototype.encodeReserved=function(e){return e.split(/(%[0-9A-Fa-f]{2})/g).map((function(e){return/%[0-9A-Fa-f]/.test(e)||(e=encodeURI(e).replace(/%5B/g,"[").replace(/%5D/g,"]")),e})).join("")},e.prototype.encodeUnreserved=function(e){return encodeURIComponent(e).replace(/[!'()*]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))},e.prototype.encodeValue=function(e,r,t){return r="+"===e||"#"===e?this.encodeReserved(r):this.encodeUnreserved(r),t?this.encodeUnreserved(t)+"="+r:r},e.prototype.isDefined=function(e){return null!=e},e.prototype.isKeyOperator=function(e){return";"===e||"&"===e||"?"===e},e.prototype.getValues=function(e,r,t,s){var i=e[t],o=[];if(this.isDefined(i)&&""!==i)if("string"==typeof i||"number"==typeof i||"boolean"==typeof i)i=i.toString(),s&&"*"!==s&&(i=i.substring(0,parseInt(s,10))),o.push(this.encodeValue(r,i,this.isKeyOperator(r)?t:null));else if("*"===s)Array.isArray(i)?i.filter(this.isDefined).forEach((function(e){o.push(this.encodeValue(r,e,this.isKeyOperator(r)?t:null))}),this):Object.keys(i).forEach((function(e){this.isDefined(i[e])&&o.push(this.encodeValue(r,i[e],e))}),this);else{var a=[];Array.isArray(i)?i.filter(this.isDefined).forEach((function(e){a.push(this.encodeValue(r,e))}),this):Object.keys(i).forEach((function(e){this.isDefined(i[e])&&(a.push(this.encodeUnreserved(e)),a.push(this.encodeValue(r,i[e].toString())))}),this),this.isKeyOperator(r)?o.push(this.encodeUnreserved(t)+"="+a.join(",")):0!==a.length&&o.push(a.join(","))}else";"===r?this.isDefined(i)&&o.push(this.encodeUnreserved(t)):""!==i||"&"!==r&&"?"!==r?""===i&&o.push(""):o.push(this.encodeUnreserved(t)+"=");return o},e.prototype.parse=function(e){var r=this,t=["+","#",".","/",";","?","&"];return{expand:function(s){return e.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g,(function(e,i,o){if(i){var a=null,p=[];if(-1!==t.indexOf(i.charAt(0))&&(a=i.charAt(0),i=i.substr(1)),i.split(/,/g).forEach((function(e){var t=/([^:\*]*)(?::(\d+)|(\*))?/.exec(e);p.push.apply(p,r.getValues(s,a,t[1],t[2]||t[3]))})),a&&"+"!==a){var n=",";return"?"===a?n="&":"#"!==a&&(n=a),(0!==p.length?a:"")+p.join(n)}return p.join(",")}return r.encodeReserved(o)}))}}},new e}()},"4HZ0":function(e,r,t){"use strict";t.d(r,"a",(function(){return _e}));var s=t("HDdC"),i=t("Z8pk"),o=t("PE4B"),a=t.n(o);function p(e){return 1==(null!=(r=e)&&"object"==typeof r&&!1===Array.isArray(r))&&"[object Object]"===Object.prototype.toString.call(e);var r}var n=function(e){var r,t;return!1!==p(e)&&"function"==typeof(r=e.constructor)&&!1!==p(t=r.prototype)&&!1!==t.hasOwnProperty("isPrototypeOf")},u=t("4CMq"),l=t.n(u),d=t("oY9k"),c=t.n(d),g=t("yDwB"),m=t.n(g),y={method:"GET",baseUrl:"".concat("https","://").concat("api.bitbucket.org").concat("/2.0"),headers:{accept:"application/json"}};function h(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}function q(e){return(q=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function _(e,r){return(_=Object.setPrototypeOf||function(e,r){return e.__proto__=r,e})(e,r)}function k(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}function b(e,r,t){return(b=k()?Reflect.construct:function(e,r,t){var s=[null];s.push.apply(s,r);var i=new(Function.bind.apply(e,s));return t&&_(i,t.prototype),i}).apply(null,arguments)}function w(e){var r="function"==typeof Map?new Map:void 0;return(w=function(e){if(null===e||-1===Function.toString.call(e).indexOf("[native code]"))return e;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==r){if(r.has(e))return r.get(e);r.set(e,t)}function t(){return b(e,arguments,q(this).constructor)}return t.prototype=Object.create(e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),_(t,e)})(e)}function f(e,r){if(null==e)return{};var t,s,i=function(e,r){if(null==e)return{};var t,s,i={},o=Object.keys(e);for(s=0;s<o.length;s++)r.indexOf(t=o[s])>=0||(i[t]=e[t]);return i}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(s=0;s<o.length;s++)r.indexOf(t=o[s])>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}function P(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function E(e,r){return!r||"object"!=typeof r&&"function"!=typeof r?P(e):r}function T(e,r){return function(e){if(Array.isArray(e))return e}(e)||function(e,r){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var t=[],s=!0,i=!1,o=void 0;try{for(var a,p=e[Symbol.iterator]();!(s=(a=p.next()).done)&&(t.push(a.value),!r||t.length!==r);s=!0);}catch(e){i=!0,o=e}finally{try{s||null==p.return||p.return()}finally{if(i)throw o}}return t}}(e,r)||v(e,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function v(e,r){if(e){if("string"==typeof e)return S(e,r);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?S(e,r):void 0}}function S(e,r){(null==r||r>e.length)&&(r=e.length);for(var t=0,s=new Array(r);t<r;t++)s[t]=e[t];return s}function R(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return Object.keys(e).reduce((function(r,t){return r[t.toLowerCase()]=e[t],r}),{})}function C(e,r,t){if("string"==typeof r){var s=T(r.split(" "),2),i=s[0],o=s[1];t=Object.assign(o?{method:i,url:o}:{url:i},t)}else t=r;return t.headers=R(t.headers),a.a.all([e,t].filter(Boolean),{isMergeableObject:n})}function j(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=e.includes("?")?"&":"?",s=Object.keys(r).filter((function(e){return void 0!==r[e]}));return 0===s.length?e:"".concat(e).concat(t).concat(s.map((function(e){return"q"===e?"q=".concat(r.q.split(" ").map(encodeURIComponent).join("+")):"".concat(e,"=").concat(encodeURIComponent(r[e]))})).join("&"))}var O=/\{[^}]+\}/g;function V(e){return e.replace(/^\W+|\W+$/g,"").split(/,/)}var G="application/x-www-form-urlencoded";function I(e){var r=e.accepts,t=void 0===r?[]:r,s=e.method,i=e.baseUrl,o=e.url,a=e.headers,p=e.request,n=f(e,["accepts","method","baseUrl","url","headers","request"]),u=s.toUpperCase(),d=function(e){var r=e.match(O);return r?r.map(V).reduce((function(e,r){return e.concat(r)}),[]):[]}(o),c=l.a.parse(o).expand(n);/^http/.test(c)||(c="".concat(i).concat(c));var g,m=Object.keys(n).reduce((function(e,r){return d.includes(r)||(e[r]=n[r]),e}),{}),y=m._body,h=f(m,["_body"]),q=!1;if(["GET","DELETE"].includes(u))c=j(c,h);else if(void 0!==y){if((q=/form-?data/i.test((g=y).constructor.name))&&t.includes("multipart/form-data"))for(var _=0,k=Object.keys(h);_<k.length;_++){var b=k[_];g.append(b,h[b])}}else Object.keys(h).length&&(g=h);return q||(t.includes(G)?(g=j("",g).substring(1),a["content-type"]=G):(g=JSON.stringify(g),a["content-type"]="application/json; charset=utf-8")),void 0===g&&delete a["content-type"],{method:u,url:c,body:g,headers:a,request:p}}function D(e,r,t){return I(C(e,r,t))}var A=function e(r,t){var s=C(r,t),i=D.bind(null,s);return i.DEFAULTS=s,i.defaults=e.bind(null,s),i.merge=C.bind(null,s),i.parse=I,i}(null,y),W=function(e){!function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(r&&r.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),r&&_(e,r)}(i,w(Error));var r,t,s=(r=i,t=k(),function(){var e,s=q(r);if(t){var i=q(this).constructor;e=Reflect.construct(s,arguments,i)}else e=s.apply(this,arguments);return E(this,e)});function i(e,r){var t,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return h(this,i),t=s.call(this,e),Error.captureStackTrace&&Error.captureStackTrace(P(t),t.constructor),t.name="HTTPError",t.error=o.error,t.headers=o.headers,t.request=o.request,t.status=r,t}return i}();function U(e){var r=e.headers.get("content-type");return r.includes("application/json")?e.json():!r||/^text\/|charset=utf-8$/.test(r)?e.text():e.arrayBuffer()}function F(e){var r,t,s,i=e.url,o=e.request,a=Object.assign({method:e.method,body:e.body,headers:e.headers},o),p={};return(null!==(r=o.fetch)&&void 0!==r?r:c.a)(i,a).then((function(r){t=r.status,s=r.url;var i,o=function(e,r){var t;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(t=v(e))){t&&(e=t);var s=0,i=function(){};return{s:i,n:function(){return s>=e.length?{done:!0}:{done:!1,value:e[s++]}},e:function(e){throw e},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,a=!0,p=!1;return{s:function(){t=e[Symbol.iterator]()},n:function(){var e=t.next();return a=e.done,e},e:function(e){p=!0,o=e},f:function(){try{a||null==t.return||t.return()}finally{if(p)throw o}}}}(r.headers);try{for(o.s();!(i=o.n()).done;){var a=T(i.value,2);p[a[0]]=a[1]}}catch(e){o.e(e)}finally{o.f()}return r.status>=400||[304].includes(r.status)?U(r).then((function(s){throw new W(r.statusText,t,{error:s,headers:p,request:e})})):U(r)})).then((function(e){return{data:e,headers:p,status:t,url:s}})).catch((function(r){if(r instanceof W)throw r;throw new W(r.message,500,{headers:p,request:e})}))}var x=function e(r,t){var s=r.defaults(t);function i(e,r){var t=s.merge(e,r);return t.request&&t.request.hook?t.request.hook((function(e){return F(s.parse(e))}),t):F(s.parse(t))}return i.defaults=e.bind(null,s),i.endpoint=s,i}(A,{});function K(e,r){e.headers=R(e.headers);var t,s=a()({headers:{},request:{}},(t=e,["baseUrl","headers","request"].reduce((function(e,r){return void 0!==t[r]&&(e[r]=t[r]),e}),{})),{isMergeableObject:n});return s.request.hook=r,s}function B(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=new i.Singular,s={request:x.defaults(K(r,t)),requestHook:t};return e.forEach((function(e){e(s,r)})),s}function H(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],t=e.slice(0);return r.forEach((function(e){t.includes(e)||t.push(e)})),L(t)}function L(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],r=B.bind(null,e);return r.plugins=H.bind(null,e),r}var M=L();function Q(e,r){if("token"in e.auth)r.headers.authorization="Bearer ".concat(e.auth.token);else if(e.auth.username){var t=m()("".concat(e.auth.username,":").concat(e.auth.password));r.headers.authorization="Basic ".concat(t)}}function z(e,r,t){var s=t[r];if(!s)throw new W("not found: ".concat(r," page"),404);return e.request({method:"GET",url:s})}var N={branching_model:{get:{alias:"repositories.getBranchingModel"},getSettings:{alias:"repositories.getBranchingModelSettings"},updateSettings:{alias:"repositories.updateBranchingModelSettings"}},branchrestrictions:{create:{alias:"repositories.createBranchRestriction"},delete:{alias:"repositories.deleteBranchRestriction"},get:{alias:"repositories.getBranchRestriction"},list:{alias:"repositories.listBranchRestrictions"},update:{alias:"repositories.updateBranchRestriction"}},commits:{bulkCreateOrUpdateAnnotations:{alias:"repositories.bulkCreateOrUpdateAnnotations"},createApproval:{alias:"repositories.createCommitApproval"},createComment:{alias:"repositories.createCommitComment"},createOrUpdateAnnotation:{alias:"repositories.createOrUpdateAnnotation"},createOrUpdateReport:{alias:"repositories.createOrUpdateReport"},deleteAnnotation:{alias:"repositories.deleteAnnotation"},deleteApproval:{alias:"repositories.deleteCommitApproval"},deleteReport:{alias:"repositories.deleteReport"},get:{alias:"repositories.getCommit"},getAnnotation:{alias:"repositories.getAnnotation"},getAnnotationsForReport:{alias:"repositories.getAnnotationsForReport"},getComment:{alias:"repositories.getCommitComment"},getDiff:{alias:"repositories.getDiff"},getPatch:{alias:"repositories.getPatch"},getReport:{alias:"repositories.getReport"},getReportsForCommit:{alias:"repositories.getReportsForCommit"},list:{alias:"repositories.listCommits"},listAlt:{alias:"repositories.listCommitsAlt"},listAt:{alias:"repositories.listCommitsAt"},listAtAlt:{alias:"repositories.listCommitsAtAlt"},listComments:{alias:"repositories.listCommitComments"}},commitstatuses:{createBuildStatus:{alias:"repositories.createCommitBuildStatus"},getBuildStatus:{alias:"repositories.getCommitBuildStatus"},list:{alias:"repositories.listCommitStatuses"},listPullRequestStatuses:{alias:"repositories.listPullRequestStatuses"},updateBuildStatus:{alias:"repositories.updateCommitBuildStatus"}},deploy:{createKey:{alias:"repositories.createDeployKey"},deleteKey:{alias:"repositories.deleteDeployKey"},getKey:{alias:"repositories.getDeployKey"},listKeys:{alias:"repositories.listDeployKeys"},updateKey:{alias:"repositories.updateDeployKey"}},deployments:{createEnvironment:{alias:"repositories.createEnvironment"},deleteEnvironmentForRepository:{alias:"repositories.deleteEnvironment"},get:{alias:"repositories.getDeployment"},getEnvironment:{alias:"repositories.getEnvironment"},list:{alias:"repositories.listDeployments"},listEnvironments:{alias:"repositories.listEnvironments"},updateEnvironment:{alias:"repositories.updateEnvironment"}},downloads:{create:{alias:"repositories.createDownload"},delete:{alias:"repositories.deleteDownload"},get:{alias:"repositories.getDownload"},list:{alias:"repositories.listDownloads"}},hook_events:{getAllSubjectTypes:{method:"GET",returns:"SubjectTypes",url:"/hook_events"},list:{method:"GET",params:{subject_type:{enum:["workspace","user","repository","team"],required:!0,type:"string"}},returns:"PaginatedHookEvents",url:"/hook_events/{subject_type}"}},issue_tracker:{create:{alias:"repositories.createIssue"},createAttachments:{alias:"repositories.createIssueAttachments"},createChange:{alias:"repositories.createIssueChange"},createComment:{alias:"repositories.createIssueComment"},createVote:{alias:"repositories.createIssueVote"},createWatch:{alias:"repositories.createIssueWatch"},delete:{alias:"repositories.deleteIssue"},deleteAttachment:{alias:"repositories.deleteIssueAttachment"},deleteComment:{alias:"repositories.deleteIssueComment"},deleteVote:{alias:"repositories.deleteIssueVote"},deleteWatch:{alias:"repositories.deleteIssueWatch"},get:{alias:"repositories.getIssue"},getAttachment:{alias:"repositories.getIssueAttachment"},getChange:{alias:"repositories.getIssueChange"},getComment:{alias:"repositories.getIssueComment"},getComponent:{alias:"repositories.getIssueComponent"},getMilestone:{alias:"repositories.getIssueMilestone"},getVersion:{alias:"repositories.getIssueVersion"},getVote:{alias:"repositories.getIssueVote"},getWatch:{alias:"repositories.getIssueWatch"},list:{alias:"repositories.listIssues"},listAttachments:{alias:"repositories.listIssueAttachments"},listChanges:{alias:"repositories.listIssueChanges"},listComments:{alias:"repositories.listIssueComments"},listComponents:{alias:"repositories.listComponents"},listMilestones:{alias:"repositories.listMilestones"},listVersions:{alias:"repositories.listVersions"},update:{alias:"repositories.updateIssue"},updateComment:{alias:"repositories.updateIssueComment"}},pipelines:{create:{alias:"repositories.createPipeline"},createDeploymentVariable:{alias:"repositories.createDeploymentVariable"},createKnownHost:{alias:"repositories.createPipelineKnownHost"},createSchedule:{alias:"repositories.createPipelineSchedule"},createVariable:{alias:"repositories.createPipelineVariable"},createVariableForTeam:{alias:"teams.createPipelineVariable"},createVariableForUser:{alias:"users.createPipelineVariable"},deleteDeploymentVariable:{alias:"repositories.deleteDeploymentVariable"},deleteKnownHost:{alias:"repositories.deletePipelineKnownHost"},deleteSchedule:{alias:"repositories.deletePipelineSchedule"},deleteSshKeyPair:{alias:"repositories.deletePipelineSshKeyPair"},deleteVariable:{alias:"repositories.deletePipelineVariable"},deleteVariableForTeam:{alias:"teams.deletePipelineVariable"},deleteVariableForUser:{alias:"users.deletePipelineVariable"},get:{alias:"repositories.getPipeline"},getConfig:{alias:"repositories.getPipelineConfig"},getKnownHost:{alias:"repositories.getPipelineKnownHost"},getSchedule:{alias:"repositories.getPipelineSchedule"},getSshKeyPair:{alias:"repositories.getPipelineSshKeyPair"},getStep:{alias:"repositories.getPipelineStep"},getStepLog:{alias:"repositories.getPipelineStepLog"},getVariable:{alias:"repositories.getPipelineVariable"},getVariableForTeam:{alias:"teams.getPipelineVariable"},getVariableForUser:{alias:"users.getPipelineVariable"},list:{alias:"repositories.listPipelines"},listDeploymentVariables:{alias:"repositories.listDeploymentVariables"},listKnownHosts:{alias:"repositories.listPipelineKnownHosts"},listScheduleExecutions:{alias:"repositories.listPipelineScheduleExecutions"},listSchedules:{alias:"repositories.listPipelineSchedules"},listSteps:{alias:"repositories.listPipelineSteps"},listVariablesForRepo:{alias:"repositories.listPipelineVariables"},listVariablesForTeam:{alias:"teams.listPipelineVariables"},listVariablesForUser:{alias:"users.listPipelineVariables"},stop:{alias:"repositories.stopPipeline"},updateBuildNumber:{alias:"repositories.updatePipelineBuildNumber"},updateConfig:{alias:"repositories.updatePipelineConfig"},updateDeploymentVariable:{alias:"repositories.updateDeploymentVariable"},updateKnownHost:{alias:"repositories.updatePipelineKnownHost"},updateSchedule:{alias:"repositories.updatePipelineSchedule"},updateSshKeyPair:{alias:"repositories.updatePipelineSshKeyPair"},updateVariable:{alias:"repositories.updatePipelineVariable"},updateVariableForTeam:{alias:"teams.updatePipelineVariable"},updateVariableForUser:{alias:"users.updatePipelineVariable"}},projects:{createForTeam:{alias:"teams.createProject"},createOrUpdateProject:{alias:"workspaces.createOrUpdateProject"},createProject:{alias:"workspaces.createProject"},deleteForTeam:{alias:"teams.deleteProject"},deleteProject:{alias:"workspaces.deleteProject"},getForTeam:{alias:"teams.getProject"},getProject:{alias:"workspaces.getProject"},listForTeam:{alias:"teams.listProjects"},updateForTeam:{alias:"teams.updateProject"}},properties:{deleteCommitHostedPropertyValue:{alias:"repositories.deleteCommitHostedPropertyValue"},deletePullRequestHostedPropertyValue:{alias:"repositories.deletePullRequestHostedPropertyValue"},deleteRepositoryHostedPropertyValue:{alias:"repositories.deleteRepositoryHostedPropertyValue"},deleteUserHostedPropertyValue:{alias:"users.deleteUserHostedPropertyValue"},getCommitHostedPropertyValue:{alias:"repositories.getCommitHostedPropertyValue"},getPullRequestHostedPropertyValue:{alias:"repositories.getPullRequestHostedPropertyValue"},getRepositoryHostedPropertyValue:{alias:"repositories.getRepositoryHostedPropertyValue"},retrieveUserHostedPropertyValue:{alias:"users.retrieveUserHostedPropertyValue"},updateCommitHostedPropertyValue:{alias:"repositories.updateCommitHostedPropertyValue"},updatePullRequestHostedPropertyValue:{alias:"repositories.updatePullRequestHostedPropertyValue"},updateRepositoryHostedPropertyValue:{alias:"repositories.updateRepositoryHostedPropertyValue"},updateUserHostedPropertyValue:{alias:"users.updateUserHostedPropertyValue"}},pullrequests:{addDefaultReviewer:{alias:"repositories.addDefaultReviewer"},create:{alias:"repositories.createPullRequest"},createApproval:{alias:"repositories.createPullRequestApproval"},createComment:{alias:"repositories.createPullRequestComment"},decline:{alias:"repositories.declinePullRequest"},deleteApproval:{alias:"repositories.deletePullRequestApproval"},deleteComment:{alias:"repositories.deletePullRequestComment"},deleteDefaultReviewer:{alias:"repositories.deleteDefaultReviewer"},get:{alias:"repositories.getPullRequest"},getComment:{alias:"repositories.getPullRequestComment"},getDefaultReviewer:{alias:"repositories.getDefaultReviewer"},getDiff:{alias:"repositories.getPullRequestDiff"},getDiffStat:{alias:"repositories.getPullRequestDiffStat"},getPatch:{alias:"repositories.getPullRequestPatch"},list:{alias:"repositories.listPullRequests"},listActivities:{alias:"repositories.listPullRequestActivities"},listActivitiesForRepo:{alias:"repositories.listPullRequestActivitiesForRepo"},listComments:{alias:"repositories.listPullRequestComments"},listCommits:{alias:"repositories.listPullRequestCommits"},listDefaultReviewers:{alias:"repositories.listDefaultReviewers"},listForCommit:{alias:"repositories.listPullrequestsForCommit"},listStatuses:{alias:"repositories.listPullRequestStatuses"},merge:{alias:"repositories.mergePullRequest"},update:{alias:"repositories.updatePullRequest"},updateComment:{alias:"repositories.updatePullRequestComment"}},refs:{createBranch:{alias:"repositories.createBranch"},createTag:{alias:"repositories.createTag"},deleteBranch:{alias:"repositories.deleteBranch"},deleteTag:{alias:"repositories.deleteTag"},getBranch:{alias:"repositories.getBranch"},getTag:{alias:"repositories.getTag"},list:{alias:"repositories.listRefs"},listBranches:{alias:"repositories.listBranches"},listTags:{alias:"repositories.listTags"}},reports:{bulkCreateOrUpdateAnnotations:{alias:"repositories.bulkCreateOrUpdateAnnotations"},createOrUpdateAnnotation:{alias:"repositories.createOrUpdateAnnotation"},createOrUpdateReport:{alias:"repositories.createOrUpdateReport"},deleteAnnotation:{alias:"repositories.deleteAnnotation"},deleteReport:{alias:"repositories.deleteReport"},getAnnotation:{alias:"repositories.getAnnotation"},getAnnotationsForReport:{alias:"repositories.getAnnotationsForReport"},getReport:{alias:"repositories.getReport"},getReportsForCommit:{alias:"repositories.getReportsForCommit"}},repositories:{addDefaultReviewer:{method:"PUT",params:{repo_slug:{required:!0,type:"string"},target_username:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/default-reviewers/{target_username}"},bulkCreateOrUpdateAnnotations:{headers:{accept:"application/json"},method:"POST",params:{_body:{required:!0,type:"any"},commit:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},reportId:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"ReportAnnotation[]",url:"/repositories/{workspace}/{repo_slug}/commit/{commit}/reports/{reportId}/annotations"},create:{headers:{accept:"application/json"},method:"POST",params:{_body:{schema:"Repository",type:"any"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"Repository",url:"/repositories/{workspace}/{repo_slug}"},createBranch:{method:"POST",params:{_body:{required:!0,type:"any"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"Branch",url:"/repositories/{workspace}/{repo_slug}/refs/branches"},createBranchRestriction:{method:"POST",params:{_body:{required:!0,schema:"Branchrestriction",type:"any"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"Branchrestriction",url:"/repositories/{workspace}/{repo_slug}/branch-restrictions"},createCommitApproval:{method:"POST",params:{node:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"Participant",url:"/repositories/{workspace}/{repo_slug}/commit/{node}/approve"},createCommitBuildStatus:{method:"POST",params:{_body:{schema:"Commitstatus",type:"any"},node:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"Commitstatus",url:"/repositories/{workspace}/{repo_slug}/commit/{node}/statuses/build"},createCommitComment:{method:"POST",params:{_body:{required:!0,schema:"CommitComment",type:"any"},node:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/commit/{node}/comments"},createDeployKey:{method:"POST",params:{key:{required:!0,type:"string"},label:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"DeployKey",url:"/repositories/{workspace}/{repo_slug}/deploy-keys"},createDeploymentVariable:{method:"POST",params:{_body:{required:!0,schema:"DeploymentVariable",type:"any"},environment_uuid:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},variable_uuid:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"DeploymentVariable",url:"/repositories/{workspace}/{repo_slug}/deployments_config/environments/{environment_uuid}/variables"},createDownload:{accepts:["multipart/form-data"],method:"POST",params:{_body:{required:!0,type:"any"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/downloads"},createEnvironment:{method:"POST",params:{_body:{required:!0,schema:"DeploymentEnvironment",type:"any"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"DeploymentEnvironment",url:"/repositories/{workspace}/{repo_slug}/environments/"},createFork:{method:"POST",params:{_body:{schema:"Repository",type:"any"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"Repository",url:"/repositories/{workspace}/{repo_slug}/forks"},createIssue:{method:"POST",params:{_body:{required:!0,schema:"Issue",type:"any"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"Issue",url:"/repositories/{workspace}/{repo_slug}/issues"},createIssueAttachments:{accepts:["multipart/form-data"],method:"POST",params:{_body:{required:!0,type:"any"},issue_id:{required:!0,type:"integer"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/issues/{issue_id}/attachments"},createIssueChange:{method:"POST",params:{_body:{required:!0,schema:"IssueChange",type:"any"},issue_id:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"IssueChange",url:"/repositories/{workspace}/{repo_slug}/issues/{issue_id}/changes"},createIssueComment:{method:"POST",params:{_body:{required:!0,schema:"IssueComment",type:"any"},issue_id:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/issues/{issue_id}/comments"},createIssueExportJob:{method:"POST",params:{_body:{schema:"ExportOptions",type:"any"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/issues/export"},createIssueImportJob:{method:"POST",params:{repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"IssueJobStatus",url:"/repositories/{workspace}/{repo_slug}/issues/import"},createIssueVote:{method:"PUT",params:{issue_id:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"Error",url:"/repositories/{workspace}/{repo_slug}/issues/{issue_id}/vote"},createIssueWatch:{method:"PUT",params:{issue_id:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"Error",url:"/repositories/{workspace}/{repo_slug}/issues/{issue_id}/watch"},createOrUpdateAnnotation:{headers:{accept:"application/json"},method:"PUT",params:{_body:{required:!0,schema:"ReportAnnotation",type:"any"},annotationId:{required:!0,type:"string"},commit:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},reportId:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"ReportAnnotation",url:"/repositories/{workspace}/{repo_slug}/commit/{commit}/reports/{reportId}/annotations/{annotationId}"},createOrUpdateReport:{headers:{accept:"application/json"},method:"PUT",params:{_body:{required:!0,schema:"Report",type:"any"},commit:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},reportId:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"Report",url:"/repositories/{workspace}/{repo_slug}/commit/{commit}/reports/{reportId}"},createPipeline:{method:"POST",params:{_body:{required:!0,schema:"Pipeline",type:"any"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"Pipeline",url:"/repositories/{workspace}/{repo_slug}/pipelines/"},createPipelineKnownHost:{method:"POST",params:{_body:{required:!0,schema:"PipelineKnownHost",type:"any"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PipelineKnownHost",url:"/repositories/{workspace}/{repo_slug}/pipelines_config/ssh/known_hosts/"},createPipelineSchedule:{method:"POST",params:{_body:{required:!0,schema:"PipelineSchedule",type:"any"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PipelineSchedule",url:"/repositories/{workspace}/{repo_slug}/pipelines_config/schedules/"},createPipelineVariable:{method:"POST",params:{_body:{required:!0,schema:"PipelineVariable",type:"any"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PipelineVariable",url:"/repositories/{workspace}/{repo_slug}/pipelines_config/variables/"},createPullRequest:{method:"POST",params:{_body:{schema:"Pullrequest",type:"any"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"Pullrequest",url:"/repositories/{workspace}/{repo_slug}/pullrequests"},createPullRequestApproval:{method:"POST",params:{pull_request_id:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"Participant",url:"/repositories/{workspace}/{repo_slug}/pullrequests/{pull_request_id}/approve"},createPullRequestComment:{method:"POST",params:{_body:{required:!0,schema:"PullrequestComment",type:"any"},pull_request_id:{required:!0,type:"integer"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PullrequestComment",url:"/repositories/{workspace}/{repo_slug}/pullrequests/{pull_request_id}/comments"},createSrcFileCommit:{accepts:["multipart/form-data","application/x-www-form-urlencoded"],method:"POST",params:{_body:{type:"any"},author:{type:"string"},branch:{type:"string"},files:{type:"string"},message:{type:"string"},parents:{type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/src"},createTag:{method:"POST",params:{_body:{required:!0,schema:"Tag",type:"any"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"Tag",url:"/repositories/{workspace}/{repo_slug}/refs/tags"},createWebhook:{method:"POST",params:{_body:{required:!0,type:"any"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"WebhookSubscription",url:"/repositories/{workspace}/{repo_slug}/hooks"},declinePullRequest:{method:"POST",params:{pull_request_id:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"Pullrequest",url:"/repositories/{workspace}/{repo_slug}/pullrequests/{pull_request_id}/decline"},delete:{method:"DELETE",params:{redirect_to:{type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}"},deleteAnnotation:{headers:{accept:"application/json"},method:"DELETE",params:{annotationId:{required:!0,type:"string"},commit:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},reportId:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/commit/{commit}/reports/{reportId}/annotations/{annotationId}"},deleteBranch:{method:"DELETE",params:{name:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/refs/branches/{name}"},deleteBranchRestriction:{method:"DELETE",params:{id:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/branch-restrictions/{id}"},deleteCommitApproval:{method:"DELETE",params:{node:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/commit/{node}/approve"},deleteCommitHostedPropertyValue:{method:"DELETE",params:{app_key:{required:!0,type:"string"},commit:{required:!0,type:"string"},property_name:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/commit/{commit}/properties/{app_key}/{property_name}"},deleteDefaultReviewer:{method:"DELETE",params:{repo_slug:{required:!0,type:"string"},target_username:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/default-reviewers/{target_username}"},deleteDeployKey:{method:"DELETE",params:{key_id:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/deploy-keys/{key_id}"},deleteDeploymentVariable:{method:"DELETE",params:{environment_uuid:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},variable_uuid:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/deployments_config/environments/{environment_uuid}/variables/{variable_uuid}"},deleteDownload:{method:"DELETE",params:{filename:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/downloads/{filename}"},deleteEnvironment:{method:"DELETE",params:{environment_uuid:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/environments/{environment_uuid}"},deleteIssue:{method:"DELETE",params:{issue_id:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"Issue",url:"/repositories/{workspace}/{repo_slug}/issues/{issue_id}"},deleteIssueAttachment:{method:"DELETE",params:{issue_id:{required:!0,type:"string"},path:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/issues/{issue_id}/attachments/{path}"},deleteIssueComment:{method:"DELETE",params:{_body:{required:!0,schema:"IssueComment",type:"any"},comment_id:{required:!0,type:"string"},issue_id:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/issues/{issue_id}/comments/{comment_id}"},deleteIssueVote:{method:"DELETE",params:{issue_id:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/issues/{issue_id}/vote"},deleteIssueWatch:{method:"DELETE",params:{issue_id:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"Error",url:"/repositories/{workspace}/{repo_slug}/issues/{issue_id}/watch"},deletePipelineKnownHost:{method:"DELETE",params:{known_host_uuid:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/pipelines_config/ssh/known_hosts/{known_host_uuid}"},deletePipelineSchedule:{method:"DELETE",params:{repo_slug:{required:!0,type:"string"},schedule_uuid:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/pipelines_config/schedules/{schedule_uuid}"},deletePipelineSshKeyPair:{method:"DELETE",params:{repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/pipelines_config/ssh/key_pair"},deletePipelineVariable:{method:"DELETE",params:{repo_slug:{required:!0,type:"string"},variable_uuid:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/pipelines_config/variables/{variable_uuid}"},deletePullRequestApproval:{method:"DELETE",params:{pull_request_id:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/pullrequests/{pull_request_id}/approve"},deletePullRequestComment:{method:"DELETE",params:{comment_id:{required:!0,type:"string"},pull_request_id:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/pullrequests/{pull_request_id}/comments/{comment_id}"},deletePullRequestHostedPropertyValue:{method:"DELETE",params:{app_key:{required:!0,type:"string"},property_name:{required:!0,type:"string"},pullrequest_id:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/pullrequests/{pullrequest_id}/properties/{app_key}/{property_name}"},deleteReport:{headers:{accept:"application/json"},method:"DELETE",params:{commit:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},reportId:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/commit/{commit}/reports/{reportId}"},deleteRepositoryHostedPropertyValue:{method:"DELETE",params:{app_key:{required:!0,type:"string"},property_name:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/properties/{app_key}/{property_name}"},deleteTag:{method:"DELETE",params:{name:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/refs/tags/{name}"},deleteWebhook:{method:"DELETE",params:{repo_slug:{required:!0,type:"string"},uid:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/hooks/{uid}"},get:{headers:{accept:"application/json"},method:"GET",params:{repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"Repository",url:"/repositories/{workspace}/{repo_slug}"},getAnnotation:{headers:{accept:"application/json"},method:"GET",params:{annotationId:{required:!0,type:"string"},commit:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},reportId:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"ReportAnnotation",url:"/repositories/{workspace}/{repo_slug}/commit/{commit}/reports/{reportId}/annotations/{annotationId}"},getAnnotationsForReport:{headers:{accept:"application/json"},method:"GET",params:{commit:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},reportId:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PaginatedAnnotations",url:"/repositories/{workspace}/{repo_slug}/commit/{commit}/reports/{reportId}/annotations"},getBranch:{method:"GET",params:{name:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"Branch",url:"/repositories/{workspace}/{repo_slug}/refs/branches/{name}"},getBranchingModel:{method:"GET",params:{repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"BranchingModel",url:"/repositories/{workspace}/{repo_slug}/branching-model"},getBranchingModelSettings:{method:"GET",params:{repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"BranchingModelSettings",url:"/repositories/{workspace}/{repo_slug}/branching-model/settings"},getBranchRestriction:{method:"GET",params:{id:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"Branchrestriction",url:"/repositories/{workspace}/{repo_slug}/branch-restrictions/{id}"},getCommit:{method:"GET",params:{node:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"Commit",url:"/repositories/{workspace}/{repo_slug}/commit/{node}"},getCommitBuildStatus:{method:"GET",params:{key:{required:!0,type:"string"},node:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"Commitstatus",url:"/repositories/{workspace}/{repo_slug}/commit/{node}/statuses/build/{key}"},getCommitComment:{method:"GET",params:{comment_id:{required:!0,type:"integer"},node:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"CommitComment",url:"/repositories/{workspace}/{repo_slug}/commit/{node}/comments/{comment_id}"},getCommitHostedPropertyValue:{method:"GET",params:{app_key:{required:!0,type:"string"},commit:{required:!0,type:"string"},property_name:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/commit/{commit}/properties/{app_key}/{property_name}"},getDefaultReviewer:{method:"GET",params:{repo_slug:{required:!0,type:"string"},target_username:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/default-reviewers/{target_username}"},getDeployKey:{method:"GET",params:{key_id:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"DeployKey",url:"/repositories/{workspace}/{repo_slug}/deploy-keys/{key_id}"},getDeployment:{method:"GET",params:{deployment_uuid:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"Deployment",url:"/repositories/{workspace}/{repo_slug}/deployments/{deployment_uuid}"},getDiff:{method:"GET",params:{binary:{type:"boolean"},context:{type:"integer"},ignore_whitespace:{type:"boolean"},merge:{type:"boolean"},path:{type:"string"},renames:{type:"boolean"},repo_slug:{required:!0,type:"string"},spec:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/diff/{spec}"},getDownload:{method:"GET",params:{filename:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/downloads/{filename}"},getEnvironment:{method:"GET",params:{environment_uuid:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"DeploymentEnvironment",url:"/repositories/{workspace}/{repo_slug}/environments/{environment_uuid}"},getIssue:{method:"GET",params:{issue_id:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"Issue",url:"/repositories/{workspace}/{repo_slug}/issues/{issue_id}"},getIssueAttachment:{method:"GET",params:{issue_id:{required:!0,type:"string"},path:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/issues/{issue_id}/attachments/{path}"},getIssueChange:{method:"GET",params:{change_id:{required:!0,type:"string"},issue_id:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"IssueChange",url:"/repositories/{workspace}/{repo_slug}/issues/{issue_id}/changes/{change_id}"},getIssueComment:{method:"GET",params:{comment_id:{required:!0,type:"string"},issue_id:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"IssueComment",url:"/repositories/{workspace}/{repo_slug}/issues/{issue_id}/comments/{comment_id}"},getIssueComponent:{method:"GET",params:{component_id:{required:!0,type:"integer"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"Component",url:"/repositories/{workspace}/{repo_slug}/components/{component_id}"},getIssueExportJobStatus:{method:"GET",params:{repo_name:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},task_id:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"IssueJobStatus",url:"/repositories/{workspace}/{repo_slug}/issues/export/{repo_name}-issues-{task_id}.zip"},getIssueImportJobStatus:{method:"GET",params:{repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"IssueJobStatus",url:"/repositories/{workspace}/{repo_slug}/issues/import"},getIssueMilestone:{method:"GET",params:{milestone_id:{required:!0,type:"integer"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"Milestone",url:"/repositories/{workspace}/{repo_slug}/milestones/{milestone_id}"},getIssueVersion:{method:"GET",params:{repo_slug:{required:!0,type:"string"},version_id:{required:!0,type:"integer"},workspace:{required:!0,type:"string"}},returns:"Version",url:"/repositories/{workspace}/{repo_slug}/versions/{version_id}"},getIssueVote:{method:"GET",params:{issue_id:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"Error",url:"/repositories/{workspace}/{repo_slug}/issues/{issue_id}/vote"},getIssueWatch:{method:"GET",params:{issue_id:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"Error",url:"/repositories/{workspace}/{repo_slug}/issues/{issue_id}/watch"},getPatch:{method:"GET",params:{repo_slug:{required:!0,type:"string"},spec:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/patch/{spec}"},getPipeline:{method:"GET",params:{pipeline_uuid:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"Pipeline",url:"/repositories/{workspace}/{repo_slug}/pipelines/{pipeline_uuid}"},getPipelineConfig:{method:"GET",params:{repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PipelinesConfig",url:"/repositories/{workspace}/{repo_slug}/pipelines_config"},getPipelineKnownHost:{method:"GET",params:{known_host_uuid:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PipelineKnownHost",url:"/repositories/{workspace}/{repo_slug}/pipelines_config/ssh/known_hosts/{known_host_uuid}"},getPipelineSchedule:{method:"GET",params:{repo_slug:{required:!0,type:"string"},schedule_uuid:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PipelineSchedule",url:"/repositories/{workspace}/{repo_slug}/pipelines_config/schedules/{schedule_uuid}"},getPipelineSshKeyPair:{method:"GET",params:{repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PipelineSshKeyPair",url:"/repositories/{workspace}/{repo_slug}/pipelines_config/ssh/key_pair"},getPipelineStep:{method:"GET",params:{pipeline_uuid:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},step_uuid:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PipelineStep",url:"/repositories/{workspace}/{repo_slug}/pipelines/{pipeline_uuid}/steps/{step_uuid}"},getPipelineStepLog:{headers:{accept:"application/octet-stream"},method:"GET",params:{pipeline_uuid:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},step_uuid:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/pipelines/{pipeline_uuid}/steps/{step_uuid}/log"},getPipelineVariable:{method:"GET",params:{repo_slug:{required:!0,type:"string"},variable_uuid:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PipelineVariable",url:"/repositories/{workspace}/{repo_slug}/pipelines_config/variables/{variable_uuid}"},getPullRequest:{method:"GET",params:{pull_request_id:{required:!0,type:"integer"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"Pullrequest",url:"/repositories/{workspace}/{repo_slug}/pullrequests/{pull_request_id}"},getPullRequestComment:{method:"GET",params:{comment_id:{required:!0,type:"string"},pull_request_id:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PullrequestComment",url:"/repositories/{workspace}/{repo_slug}/pullrequests/{pull_request_id}/comments/{comment_id}"},getPullRequestDiff:{method:"GET",params:{pull_request_id:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/pullrequests/{pull_request_id}/diff"},getPullRequestDiffStat:{method:"GET",params:{pull_request_id:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/pullrequests/{pull_request_id}/diffstat"},getPullRequestHostedPropertyValue:{method:"GET",params:{app_key:{required:!0,type:"string"},property_name:{required:!0,type:"string"},pullrequest_id:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/pullrequests/{pullrequest_id}/properties/{app_key}/{property_name}"},getPullRequestPatch:{method:"GET",params:{pull_request_id:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/pullrequests/{pull_request_id}/patch"},getReport:{headers:{accept:"application/json"},method:"GET",params:{commit:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},reportId:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"Report",url:"/repositories/{workspace}/{repo_slug}/commit/{commit}/reports/{reportId}"},getReportsForCommit:{headers:{accept:"application/json"},method:"GET",params:{commit:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PaginatedReports",url:"/repositories/{workspace}/{repo_slug}/commit/{commit}/reports"},getRepositoryHostedPropertyValue:{method:"GET",params:{app_key:{required:!0,type:"string"},property_name:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/properties/{app_key}/{property_name}"},getTag:{method:"GET",params:{name:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"Tag",url:"/repositories/{workspace}/{repo_slug}/refs/tags/{name}"},getWebhook:{method:"GET",params:{repo_slug:{required:!0,type:"string"},uid:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"WebhookSubscription",url:"/repositories/{workspace}/{repo_slug}/hooks/{uid}"},list:{method:"GET",params:{role:{enum:["admin","contributor","member","owner"],type:"string"},workspace:{required:!0,type:"string"}},returns:"PaginatedRepositories",url:"/repositories/{workspace}"},listBranches:{method:"GET",params:{repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PaginatedBranches",url:"/repositories/{workspace}/{repo_slug}/refs/branches"},listBranchRestrictions:{method:"GET",params:{kind:{type:"string"},pattern:{type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PaginatedBranchrestrictions",url:"/repositories/{workspace}/{repo_slug}/branch-restrictions"},listCommitComments:{method:"GET",params:{node:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PaginatedCommitComments",url:"/repositories/{workspace}/{repo_slug}/commit/{node}/comments"},listCommits:{method:"GET",params:{exclude:{type:"string"},include:{type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/commits"},listCommitsAlt:{accepts:["application/x-www-form-urlencoded"],method:"POST",params:{exclude:{type:"string"},include:{type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/commits{?page,pagelen,q,sort}"},listCommitsAt:{method:"GET",params:{exclude:{type:"string"},include:{type:"string"},repo_slug:{required:!0,type:"string"},revision:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/commits/{revision}"},listCommitsAtAlt:{method:"POST",params:{exclude:{type:"string"},include:{type:"string"},repo_slug:{required:!0,type:"string"},revision:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/commits/{revision}{?page,pagelen,q,sort}"},listCommitStatuses:{method:"GET",params:{node:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PaginatedCommitstatuses",url:"/repositories/{workspace}/{repo_slug}/commit/{node}/statuses"},listComponents:{method:"GET",params:{repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PaginatedComponents",url:"/repositories/{workspace}/{repo_slug}/components"},listDefaultReviewers:{method:"GET",params:{repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/default-reviewers"},listDeployKeys:{method:"GET",params:{repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PaginatedDeployKeys",url:"/repositories/{workspace}/{repo_slug}/deploy-keys"},listDeployments:{method:"GET",params:{repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PaginatedDeployments",url:"/repositories/{workspace}/{repo_slug}/deployments/"},listDeploymentVariables:{method:"GET",params:{environment_uuid:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PaginatedDeploymentVariable",url:"/repositories/{workspace}/{repo_slug}/deployments_config/environments/{environment_uuid}/variables"},listDiffStats:{method:"GET",params:{ignore_whitespace:{type:"boolean"},merge:{type:"boolean"},path:{type:"string"},renames:{type:"boolean"},repo_slug:{required:!0,type:"string"},spec:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PaginatedDiffstats",url:"/repositories/{workspace}/{repo_slug}/diffstat/{spec}"},listDownloads:{method:"GET",params:{repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/downloads"},listEnvironments:{method:"GET",params:{repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PaginatedEnvironments",url:"/repositories/{workspace}/{repo_slug}/environments/"},listFileHistory:{method:"GET",params:{node:{required:!0,type:"string"},path:{required:!0,type:"string"},renames:{type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PaginatedFiles",url:"/repositories/{workspace}/{repo_slug}/filehistory/{node}/{path}"},listForks:{method:"GET",params:{repo_slug:{required:!0,type:"string"},role:{enum:["admin","contributor","member","owner"],type:"string"},workspace:{required:!0,type:"string"}},returns:"PaginatedRepositories",url:"/repositories/{workspace}/{repo_slug}/forks"},listGlobal:{method:"GET",params:{after:{type:"string"},role:{enum:["admin","contributor","member","owner"],type:"string"}},returns:"PaginatedRepositories",url:"/repositories"},listIssueAttachments:{method:"GET",params:{issue_id:{required:!0,type:"integer"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PaginatedIssueAttachments",url:"/repositories/{workspace}/{repo_slug}/issues/{issue_id}/attachments"},listIssueChanges:{method:"GET",params:{issue_id:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PaginatedLogEntries",url:"/repositories/{workspace}/{repo_slug}/issues/{issue_id}/changes"},listIssueComments:{method:"GET",params:{issue_id:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PaginatedIssueComments",url:"/repositories/{workspace}/{repo_slug}/issues/{issue_id}/comments"},listIssues:{method:"GET",params:{repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PaginatedIssues",url:"/repositories/{workspace}/{repo_slug}/issues"},listMilestones:{method:"GET",params:{repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PaginatedMilestones",url:"/repositories/{workspace}/{repo_slug}/milestones"},listPermissions:{alias:"user.listPermissionsForRepos"},listPipelineKnownHosts:{method:"GET",params:{repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PaginatedPipelineKnownHosts",url:"/repositories/{workspace}/{repo_slug}/pipelines_config/ssh/known_hosts/"},listPipelines:{method:"GET",params:{repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PaginatedPipelines",url:"/repositories/{workspace}/{repo_slug}/pipelines/"},listPipelineScheduleExecutions:{method:"GET",params:{repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PaginatedPipelineScheduleExecutions",url:"/repositories/{workspace}/{repo_slug}/pipelines_config/schedules/{schedule_uuid}/executions/"},listPipelineSchedules:{method:"GET",params:{repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PaginatedPipelineSchedules",url:"/repositories/{workspace}/{repo_slug}/pipelines_config/schedules/"},listPipelineSteps:{method:"GET",params:{pipeline_uuid:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PaginatedPipelineSteps",url:"/repositories/{workspace}/{repo_slug}/pipelines/{pipeline_uuid}/steps/"},listPipelineVariables:{method:"GET",params:{repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PaginatedPipelineVariables",url:"/repositories/{workspace}/{repo_slug}/pipelines_config/variables/"},listPullRequestActivities:{method:"GET",params:{pull_request_id:{required:!0,type:"integer"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/pullrequests/{pull_request_id}/activity"},listPullRequestActivitiesForRepo:{method:"GET",params:{repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/pullrequests/activity"},listPullRequestComments:{method:"GET",params:{pull_request_id:{required:!0,type:"integer"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PaginatedPullrequestComments",url:"/repositories/{workspace}/{repo_slug}/pullrequests/{pull_request_id}/comments"},listPullRequestCommits:{method:"GET",params:{pull_request_id:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/pullrequests/{pull_request_id}/commits"},listPullRequests:{method:"GET",params:{repo_slug:{required:!0,type:"string"},state:{enum:["MERGED","SUPERSEDED","OPEN","DECLINED"],type:"string"},workspace:{required:!0,type:"string"}},returns:"PaginatedPullrequests",url:"/repositories/{workspace}/{repo_slug}/pullrequests"},listPullrequestsForCommit:{headers:{accept:"application/json"},method:"GET",params:{commit:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PaginatedPullrequests",url:"/repositories/{workspace}/{repo_slug}/commit/{commit}/pullrequests"},listPullRequestStatuses:{method:"GET",params:{pull_request_id:{required:!0,type:"integer"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PaginatedCommitstatuses",url:"/repositories/{workspace}/{repo_slug}/pullrequests/{pull_request_id}/statuses"},listRefs:{method:"GET",params:{repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PaginatedRefs",url:"/repositories/{workspace}/{repo_slug}/refs"},listTags:{method:"GET",params:{repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PaginatedTags",url:"/repositories/{workspace}/{repo_slug}/refs/tags"},listVersions:{method:"GET",params:{repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PaginatedVersions",url:"/repositories/{workspace}/{repo_slug}/versions"},listWatchers:{method:"GET",params:{repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/watchers"},listWebhooks:{method:"GET",params:{repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PaginatedWebhookSubscriptions",url:"/repositories/{workspace}/{repo_slug}/hooks"},mergePullRequest:{method:"POST",params:{_body:{schema:"PullrequestMergeParameters",type:"any"},pull_request_id:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"Pullrequest",url:"/repositories/{workspace}/{repo_slug}/pullrequests/{pull_request_id}/merge"},readSrc:{method:"GET",params:{format:{enum:["meta","rendered"],type:"string"},max_depth:{type:"integer"},node:{required:!0,type:"string"},path:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PaginatedTreeentries",url:"/repositories/{workspace}/{repo_slug}/src/{node}/{path}"},readSrcRoot:{method:"GET",params:{format:{enum:["meta"],type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PaginatedTreeentries",url:"/repositories/{workspace}/{repo_slug}/src"},stopPipeline:{method:"POST",params:{pipeline_uuid:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/pipelines/{pipeline_uuid}/stopPipeline"},update:{headers:{accept:"application/json"},method:"PUT",params:{_body:{schema:"Repository",type:"any"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"Repository",url:"/repositories/{workspace}/{repo_slug}"},updateBranchingModelSettings:{method:"PUT",params:{_body:{schema:"BranchingModelSettings",type:"any"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"BranchingModelSettings",url:"/repositories/{workspace}/{repo_slug}/branching-model/settings"},updateBranchRestriction:{method:"PUT",params:{_body:{required:!0,schema:"Branchrestriction",type:"any"},id:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"Branchrestriction",url:"/repositories/{workspace}/{repo_slug}/branch-restrictions/{id}"},updateCommitBuildStatus:{method:"PUT",params:{_body:{schema:"Commitstatus",type:"any"},key:{required:!0,type:"string"},node:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"Commitstatus",url:"/repositories/{workspace}/{repo_slug}/commit/{node}/statuses/build/{key}"},updateCommitHostedPropertyValue:{method:"PUT",params:{app_key:{required:!0,type:"string"},commit:{required:!0,type:"string"},property_name:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/commit/{commit}/properties/{app_key}/{property_name}"},updateDeployKey:{method:"PUT",params:{key_id:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"DeployKey",url:"/repositories/{workspace}/{repo_slug}/deploy-keys/{key_id}"},updateDeploymentVariable:{method:"PUT",params:{_body:{required:!0,schema:"DeploymentVariable",type:"any"},environment_uuid:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},variable_uuid:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"DeploymentVariable",url:"/repositories/{workspace}/{repo_slug}/deployments_config/environments/{environment_uuid}/variables/{variable_uuid}"},updateEnvironment:{method:"POST",params:{_body:{required:!0,type:"any"},environment_uuid:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/environments/{environment_uuid}/changes/"},updateIssue:{method:"PUT",params:{_body:{required:!0,schema:"Issue",type:"any"},issue_id:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"Issue",url:"/repositories/{workspace}/{repo_slug}/issues/{issue_id}"},updateIssueComment:{method:"PUT",params:{_body:{required:!0,schema:"IssueComment",type:"any"},comment_id:{required:!0,type:"string"},issue_id:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"IssueComment",url:"/repositories/{workspace}/{repo_slug}/issues/{issue_id}/comments/{comment_id}"},updatePipelineBuildNumber:{method:"PUT",params:{_body:{required:!0,schema:"PipelineBuildNumber",type:"any"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PipelineBuildNumber",url:"/repositories/{workspace}/{repo_slug}/pipelines_config/build_number"},updatePipelineConfig:{method:"PUT",params:{_body:{required:!0,schema:"PipelinesConfig",type:"any"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PipelinesConfig",url:"/repositories/{workspace}/{repo_slug}/pipelines_config"},updatePipelineKnownHost:{method:"PUT",params:{_body:{required:!0,schema:"PipelineKnownHost",type:"any"},known_host_uuid:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PipelineKnownHost",url:"/repositories/{workspace}/{repo_slug}/pipelines_config/ssh/known_hosts/{known_host_uuid}"},updatePipelineSchedule:{method:"PUT",params:{_body:{required:!0,schema:"PipelineSchedule",type:"any"},repo_slug:{required:!0,type:"string"},schedule_uuid:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PipelineSchedule",url:"/repositories/{workspace}/{repo_slug}/pipelines_config/schedules/{schedule_uuid}"},updatePipelineSshKeyPair:{method:"PUT",params:{_body:{required:!0,schema:"PipelineSshKeyPair",type:"any"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PipelineSshKeyPair",url:"/repositories/{workspace}/{repo_slug}/pipelines_config/ssh/key_pair"},updatePipelineVariable:{method:"PUT",params:{_body:{required:!0,schema:"PipelineVariable",type:"any"},repo_slug:{required:!0,type:"string"},variable_uuid:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PipelineVariable",url:"/repositories/{workspace}/{repo_slug}/pipelines_config/variables/{variable_uuid}"},updatePullRequest:{method:"PUT",params:{_body:{schema:"Pullrequest",type:"any"},pull_request_id:{required:!0,type:"integer"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"Pullrequest",url:"/repositories/{workspace}/{repo_slug}/pullrequests/{pull_request_id}"},updatePullRequestComment:{method:"PUT",params:{_body:{required:!0,schema:"PullrequestComment",type:"any"},comment_id:{required:!0,type:"string"},pull_request_id:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PullrequestComment",url:"/repositories/{workspace}/{repo_slug}/pullrequests/{pull_request_id}/comments/{comment_id}"},updatePullRequestHostedPropertyValue:{method:"PUT",params:{app_key:{required:!0,type:"string"},property_name:{required:!0,type:"string"},pullrequest_id:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/pullrequests/{pullrequest_id}/properties/{app_key}/{property_name}"},updateRepositoryHostedPropertyValue:{method:"PUT",params:{app_key:{required:!0,type:"string"},property_name:{required:!0,type:"string"},repo_slug:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/repositories/{workspace}/{repo_slug}/properties/{app_key}/{property_name}"},updateWebhook:{method:"PUT",params:{repo_slug:{required:!0,type:"string"},uid:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"WebhookSubscription",url:"/repositories/{workspace}/{repo_slug}/hooks/{uid}"}},search:{codeOfTeam:{alias:"teams.searchCode"},codeOfUser:{alias:"users.searchCode"},searchAccount:{alias:"workspaces.searchAccount"}},snippet:{getRawFiles:{alias:"snippets.getRawFiles"}},snippets:{checkWatch:{method:"GET",params:{encoded_id:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/snippets/{workspace}/{encoded_id}/watch"},create:{method:"POST",params:{_body:{required:!0,schema:"Snippet",type:"any"}},returns:"Snippet",url:"/snippets"},createComment:{method:"POST",params:{_body:{required:!0,schema:"Snippet",type:"any"},encoded_id:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"Snippet",url:"/snippets/{workspace}/{encoded_id}/comments"},createForUser:{method:"POST",params:{_body:{required:!0,schema:"Snippet",type:"any"},workspace:{required:!0,type:"string"}},returns:"Snippet",url:"/snippets/{workspace}"},delete:{method:"DELETE",params:{encoded_id:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/snippets/{workspace}/{encoded_id}"},deleteAt:{method:"DELETE",params:{encoded_id:{required:!0,type:"string"},node_id:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/snippets/{workspace}/{encoded_id}/{node_id}"},deleteComment:{method:"DELETE",params:{comment_id:{required:!0,type:"string"},encoded_id:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/snippets/{workspace}/{encoded_id}/comments/{comment_id}"},get:{method:"GET",params:{encoded_id:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"Snippet",url:"/snippets/{workspace}/{encoded_id}"},getAt:{method:"GET",params:{encoded_id:{required:!0,type:"string"},node_id:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"Snippet",url:"/snippets/{workspace}/{encoded_id}/{node_id}"},getComment:{method:"GET",params:{comment_id:{required:!0,type:"string"},encoded_id:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"SnippetComment",url:"/snippets/{workspace}/{encoded_id}/comments/{comment_id}"},getCommit:{method:"GET",params:{encoded_id:{required:!0,type:"string"},revision:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"SnippetCommit",url:"/snippets/{workspace}/{encoded_id}/commits/{revision}"},getDiff:{method:"GET",params:{encoded_id:{required:!0,type:"string"},path:{type:"string"},revision:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/snippets/{workspace}/{encoded_id}/{revision}/diff"},getFile:{method:"GET",params:{encoded_id:{required:!0,type:"string"},node_id:{required:!0,type:"string"},path:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/snippets/{workspace}/{encoded_id}/{node_id}/files/{path}"},getPatch:{method:"GET",params:{encoded_id:{required:!0,type:"string"},revision:{required:!0,type:"string"},spec:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/snippets/{workspace}/{encoded_id}/{revision}/patch"},getRawFiles:{method:"GET",params:{encoded_id:{required:!0,type:"string"},path:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/snippets/{workspace}/{encoded_id}/files/{path}"},list:{method:"GET",params:{role:{enum:["owner","contributor","member"],type:"string"}},returns:"PaginatedSnippets",url:"/snippets"},listComments:{method:"GET",params:{encoded_id:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PaginatedSnippetComments",url:"/snippets/{workspace}/{encoded_id}/comments"},listCommits:{method:"GET",params:{encoded_id:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PaginatedSnippetCommit",url:"/snippets/{workspace}/{encoded_id}/commits"},listForUser:{method:"GET",params:{role:{enum:["owner","contributor","member"],type:"string"},workspace:{required:!0,type:"string"}},returns:"PaginatedSnippets",url:"/snippets/{workspace}"},listWatchers:{deprecated:!0,method:"GET",params:{encoded_id:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"PaginatedUsers",url:"/snippets/{workspace}/{encoded_id}/watchers"},startWatch:{method:"PUT",params:{encoded_id:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/snippets/{workspace}/{encoded_id}/watch"},stopWatch:{method:"DELETE",params:{encoded_id:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/snippets/{workspace}/{encoded_id}/watch"},update:{accepts:["application/json","multipart/related","multipart/form-data"],method:"PUT",params:{encoded_id:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"Snippet",url:"/snippets/{workspace}/{encoded_id}"},updateAt:{accepts:["application/json","multipart/related","multipart/form-data"],method:"PUT",params:{encoded_id:{required:!0,type:"string"},node_id:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"Snippet",url:"/snippets/{workspace}/{encoded_id}/{node_id}"},updateComment:{method:"PUT",params:{comment_id:{required:!0,type:"string"},encoded_id:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/snippets/{workspace}/{encoded_id}/comments/{comment_id}"}},source:{createFileCommit:{alias:"repositories.createSrcFileCommit"},listHistory:{alias:"repositories.listFileHistory"},read:{alias:"repositories.readSrc"},readRoot:{alias:"repositories.readSrcRoot"}},ssh:{createKey:{alias:"users.createSshKey"},deleteKey:{alias:"users.deleteSshKey"},getKey:{alias:"users.getSshKey"},listKeys:{alias:"users.listSshKeys"},updateKey:{alias:"users.updateSshKey"}},teams:{createPipelineVariable:{method:"POST",params:{_body:{schema:"PipelineVariable",type:"any"},username:{required:!0,type:"string"}},returns:"PipelineVariable",url:"/teams/{username}/pipelines_config/variables/"},createProject:{method:"POST",params:{_body:{required:!0,schema:"Project",type:"any"},username:{required:!0,type:"string"}},returns:"Project",url:"/teams/{username}/projects/"},createWebhook:{method:"POST",params:{username:{required:!0,type:"string"}},returns:"WebhookSubscription",url:"/teams/{username}/hooks"},deletePipelineVariable:{method:"DELETE",params:{username:{required:!0,type:"string"},variable_uuid:{required:!0,type:"string"}},url:"/teams/{username}/pipelines_config/variables/{variable_uuid}"},deleteProject:{method:"DELETE",params:{project_key:{required:!0,type:"string"},username:{required:!0,type:"string"}},url:"/teams/{username}/projects/{project_key}"},deleteWebhook:{method:"DELETE",params:{uid:{required:!0,type:"string"},username:{required:!0,type:"string"}},url:"/teams/{username}/hooks/{uid}"},get:{method:"GET",params:{username:{required:!0,type:"string"}},returns:"Team",url:"/teams/{username}"},getAllMembers:{deprecated:!0,method:"GET",params:{username:{required:!0,type:"string"}},returns:"User",url:"/teams/{username}/members"},getMembers:{alias:"users.getTeamMembers"},getPipelineVariable:{method:"GET",params:{username:{required:!0,type:"string"},variable_uuid:{required:!0,type:"string"}},returns:"PipelineVariable",url:"/teams/{username}/pipelines_config/variables/{variable_uuid}"},getProject:{method:"GET",params:{project_key:{required:!0,type:"string"},username:{required:!0,type:"string"}},returns:"Project",url:"/teams/{username}/projects/{project_key}"},getWebhook:{method:"GET",params:{uid:{required:!0,type:"string"},username:{required:!0,type:"string"}},returns:"WebhookSubscription",url:"/teams/{username}/hooks/{uid}"},list:{deprecated:!0,method:"GET",params:{role:{enum:["admin","contributor","member"],type:"string"}},returns:"PaginatedTeams",url:"/teams"},listFollowers:{method:"GET",params:{username:{required:!0,type:"string"}},returns:"PaginatedUsers",url:"/teams/{username}/followers"},listFollowing:{deprecated:!0,method:"GET",params:{username:{required:!0,type:"string"}},returns:"PaginatedUsers",url:"/teams/{username}/following"},listPermissions:{deprecated:!0,method:"GET",params:{username:{required:!0,type:"string"}},returns:"PaginatedTeamPermissions",url:"/teams/{username}/permissions"},listPermissionsForRepo:{deprecated:!0,method:"GET",params:{repo_slug:{required:!0,type:"string"},username:{required:!0,type:"string"}},returns:"PaginatedRepositoryPermissions",url:"/teams/{username}/permissions/repositories/{repo_slug}"},listPermissionsForRepos:{deprecated:!0,method:"GET",params:{username:{required:!0,type:"string"}},returns:"PaginatedRepositoryPermissions",url:"/teams/{username}/permissions/repositories"},listPipelineVariables:{method:"GET",params:{username:{required:!0,type:"string"}},returns:"PaginatedPipelineVariables",url:"/teams/{username}/pipelines_config/variables/"},listProjects:{method:"GET",params:{username:{required:!0,type:"string"}},returns:"PaginatedProjects",url:"/teams/{username}/projects/"},listRepositories:{method:"GET",params:{username:{required:!0,type:"string"}},url:"/teams/{username}/repositories"},listRepositoriesForUser:{alias:"users.listRepositories"},listWebhooks:{method:"GET",params:{username:{required:!0,type:"string"}},returns:"PaginatedWebhookSubscriptions",url:"/teams/{username}/hooks"},searchCode:{headers:{accept:"application/json"},method:"GET",params:{search_query:{required:!0,type:"string"},username:{required:!0,type:"string"}},returns:"SearchResultPage",url:"/teams/{username}/search/code"},updatePipelineVariable:{method:"PUT",params:{_body:{required:!0,schema:"PipelineVariable",type:"any"},username:{required:!0,type:"string"},variable_uuid:{required:!0,type:"string"}},returns:"PipelineVariable",url:"/teams/{username}/pipelines_config/variables/{variable_uuid}"},updateProject:{method:"PUT",params:{_body:{required:!0,schema:"Project",type:"any"},project_key:{required:!0,type:"string"},username:{required:!0,type:"string"}},returns:"Project",url:"/teams/{username}/projects/{project_key}"},updateWebhook:{method:"PUT",params:{uid:{required:!0,type:"string"},username:{required:!0,type:"string"}},returns:"WebhookSubscription",url:"/teams/{username}/hooks/{uid}"}},user:{get:{method:"GET",returns:"User",url:"/user"},getEmail:{method:"GET",params:{email:{required:!0,type:"string"}},url:"/user/emails/{email}"},listEmails:{method:"GET",url:"/user/emails"},listPermissionsForRepos:{method:"GET",returns:"PaginatedRepositoryPermissions",url:"/user/permissions/repositories"},listPermissionsForTeams:{method:"GET",returns:"PaginatedTeamPermissions",url:"/user/permissions/teams"}},users:{createPipelineVariable:{method:"POST",params:{_body:{schema:"PipelineVariable",type:"any"},selected_user:{required:!0,type:"string"}},returns:"PipelineVariable",url:"/users/{selected_user}/pipelines_config/variables/"},createSshKey:{method:"POST",params:{_body:{schema:"SshAccountKey",type:"any"},username:{required:!0,type:"string"}},returns:"SshAccountKey",url:"/users/{username}/ssh-keys"},createWebhook:{method:"POST",params:{username:{required:!0,type:"string"}},returns:"WebhookSubscription",url:"/users/{username}/hooks"},deletePipelineVariable:{method:"DELETE",params:{selected_user:{required:!0,type:"string"},variable_uuid:{required:!0,type:"string"}},url:"/users/{selected_user}/pipelines_config/variables/{variable_uuid}"},deleteSshKey:{method:"DELETE",params:{key_id:{required:!0,type:"string"},username:{required:!0,type:"string"}},url:"/users/{username}/ssh-keys/{key_id}"},deleteUserHostedPropertyValue:{method:"DELETE",params:{app_key:{required:!0,type:"string"},property_name:{required:!0,type:"string"},selected_user:{required:!0,type:"string"}},url:"/users/{selected_user}/properties/{app_key}/{property_name}"},deleteWebhook:{method:"DELETE",params:{uid:{required:!0,type:"string"},username:{required:!0,type:"string"}},url:"/users/{username}/hooks/{uid}"},get:{deprecated:!0,method:"GET",params:{username:{required:!0,type:"string"}},returns:"User",url:"/users/{username}"},getAuthedUser:{alias:"user.get"},getEmailForAuthedUser:{alias:"user.getEmail"},getPipelineVariable:{method:"GET",params:{selected_user:{required:!0,type:"string"},variable_uuid:{required:!0,type:"string"}},returns:"PipelineVariable",url:"/users/{selected_user}/pipelines_config/variables/{variable_uuid}"},getSshKey:{method:"GET",params:{key_id:{required:!0,type:"string"},username:{required:!0,type:"string"}},returns:"SshAccountKey",url:"/users/{username}/ssh-keys/{key_id}"},getTeamMembers:{deprecated:!0,method:"GET",params:{username:{required:!0,type:"string"}},returns:"User",url:"/users/{username}/members"},getWebhook:{method:"GET",params:{uid:{required:!0,type:"string"},username:{required:!0,type:"string"}},returns:"WebhookSubscription",url:"/users/{username}/hooks/{uid}"},listEmailsForAuthedUser:{alias:"user.listEmails"},listPipelineVariables:{method:"GET",params:{selected_user:{required:!0,type:"string"}},returns:"PaginatedPipelineVariables",url:"/users/{selected_user}/pipelines_config/variables/"},listRepositories:{method:"GET",params:{username:{required:!0,type:"string"}},url:"/users/{username}/repositories"},listRepositoriesForTeam:{alias:"teams.listRepositories"},listSshKeys:{method:"GET",params:{username:{required:!0,type:"string"}},returns:"PaginatedSshUserKeys",url:"/users/{username}/ssh-keys"},listWebhooks:{deprecated:!0,method:"GET",params:{username:{required:!0,type:"string"}},returns:"PaginatedWebhookSubscriptions",url:"/users/{username}/hooks"},retrieveUserHostedPropertyValue:{method:"GET",params:{app_key:{required:!0,type:"string"},property_name:{required:!0,type:"string"},selected_user:{required:!0,type:"string"}},url:"/users/{selected_user}/properties/{app_key}/{property_name}"},searchCode:{headers:{accept:"application/json"},method:"GET",params:{search_query:{required:!0,type:"string"},selected_user:{required:!0,type:"string"}},returns:"SearchResultPage",url:"/users/{selected_user}/search/code"},updatePipelineVariable:{method:"PUT",params:{_body:{required:!0,schema:"PipelineVariable",type:"any"},selected_user:{required:!0,type:"string"},variable_uuid:{required:!0,type:"string"}},returns:"PipelineVariable",url:"/users/{selected_user}/pipelines_config/variables/{variable_uuid}"},updateSshKey:{method:"PUT",params:{_body:{schema:"SshAccountKey",type:"any"},key_id:{required:!0,type:"string"},username:{required:!0,type:"string"}},returns:"SshAccountKey",url:"/users/{username}/ssh-keys/{key_id}"},updateUserHostedPropertyValue:{method:"PUT",params:{app_key:{required:!0,type:"string"},property_name:{required:!0,type:"string"},selected_user:{required:!0,type:"string"}},url:"/users/{selected_user}/properties/{app_key}/{property_name}"},updateWebhook:{method:"PUT",params:{uid:{required:!0,type:"string"},username:{required:!0,type:"string"}},returns:"WebhookSubscription",url:"/users/{username}/hooks/{uid}"}},webhooks:{create:{alias:"repositories.createWebhook"},createForTeam:{alias:"teams.createWebhook"},createForUser:{alias:"users.createWebhook"},createWebhookForWorkspace:{alias:"workspaces.createWebhookForWorkspace"},delete:{alias:"repositories.deleteWebhook"},deleteForTeam:{alias:"teams.deleteWebhook"},deleteForUser:{alias:"users.deleteWebhook"},deleteWebhookForWorkspace:{alias:"workspaces.deleteWebhookForWorkspace"},get:{alias:"repositories.getWebhook"},getAllSubjectTypes:{alias:"hook_events.getAllSubjectTypes"},getForTeam:{alias:"teams.getWebhook"},getForUser:{alias:"users.getWebhook"},getWebhookForWorkspace:{alias:"workspaces.getWebhookForWorkspace"},getWebhooksForWorkspace:{alias:"workspaces.getWebhooksForWorkspace"},list:{alias:"hook_events.list"},listForRepo:{alias:"repositories.listWebhooks"},listForTeam:{alias:"teams.listWebhooks"},listForUser:{alias:"users.listWebhooks"},update:{alias:"repositories.updateWebhook"},updateForTeam:{alias:"teams.updateWebhook"},updateForUser:{alias:"users.updateWebhook"},updateWebhookForWorkspace:{alias:"workspaces.updateWebhookForWorkspace"}},workspaces:{createOrUpdateProject:{method:"PUT",params:{_body:{required:!0,schema:"Project",type:"any"},project_key:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"Project",url:"/workspaces/{workspace}/projects/{project_key}"},createProject:{method:"POST",params:{_body:{required:!0,schema:"Project",type:"any"},workspace:{required:!0,type:"string"}},returns:"Project",url:"/workspaces/{workspace}/projects"},createWebhookForWorkspace:{method:"POST",params:{workspace:{required:!0,type:"string"}},returns:"WebhookSubscription",url:"/workspaces/{workspace}/hooks"},deleteProject:{method:"DELETE",params:{project_key:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/workspaces/{workspace}/projects/{project_key}"},deleteWebhookForWorkspace:{method:"DELETE",params:{uid:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},url:"/workspaces/{workspace}/hooks/{uid}"},getMemberForWorkspace:{method:"GET",params:{member:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"WorkspaceMembership",url:"/workspaces/{workspace}/members/{member}"},getMembersForWorkspace:{method:"GET",params:{workspace:{required:!0,type:"string"}},returns:"PaginatedWorkspaceMemberships",url:"/workspaces/{workspace}/members"},getProject:{method:"GET",params:{project_key:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"Project",url:"/workspaces/{workspace}/projects/{project_key}"},getProjects:{method:"GET",params:{workspace:{required:!0,type:"string"}},returns:"PaginatedProjects",url:"/workspaces/{workspace}/projects"},getWebhookForWorkspace:{method:"GET",params:{uid:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"WebhookSubscription",url:"/workspaces/{workspace}/hooks/{uid}"},getWebhooksForWorkspace:{method:"GET",params:{workspace:{required:!0,type:"string"}},returns:"PaginatedWebhookSubscriptions",url:"/workspaces/{workspace}/hooks"},getWorkspace:{method:"GET",params:{workspace:{required:!0,type:"string"}},returns:"Workspace",url:"/workspaces/{workspace}"},getWorkspaces:{method:"GET",returns:"PaginatedWorkspaces",url:"/workspaces"},searchAccount:{headers:{accept:"application/json"},method:"GET",params:{search_query:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"SearchResultPage",url:"/workspaces/{workspace}/search/code"},updateWebhookForWorkspace:{method:"PUT",params:{uid:{required:!0,type:"string"},workspace:{required:!0,type:"string"}},returns:"WebhookSubscription",url:"/workspaces/{workspace}/hooks/{uid}"}}};function Z(e,r){for(var t=function(){var t=i[s];e[t]||(e[t]={});for(var o=function(){var s=p[a],i=r[t][s];if(i.alias){var o=T(i.alias.split("."),2);i=r[o[0]][o[1]]}var n=["accepts","method","url","headers"].reduce((function(e,r){return r in i&&(e[r]=i[r]),e}),{});n.request={validate:i.params};var u=e.request.defaults(n);if(i.deprecated)return e[t][s]=function(){return console.log("\x1b[43m\x1b[30m %s \x1b[0m\x1b[33m %s \x1b[0m","DEPRECATION WARNING:","".concat(n.method," ").concat(n.url)),e[t][s]=u,u.apply(void 0,arguments)},"continue";e[t][s]=u},a=0,p=Object.keys(r[t]);a<p.length;a++)o()},s=0,i=Object.keys(r);s<i.length;s++)t()}function $(e,r){var t=r.request.validate;if(t)for(var s=0,i=Object.keys(t);s<i.length;s++){var o=i[s],a=t[o],p=a.type,n=r[o],u=void 0!==n;if(a.required||u){if(a.required&&!u)throw new W("parameter required: '".concat(o,"'"),400);if("integer"===p){var l=n;if(n=parseInt(n,10),isNaN(n))throw new W("invalid value for parameter '".concat(o,"': ").concat(JSON.stringify(l)," is NaN"),400)}if("boolean"===p&&"boolean"!=typeof n)throw new W("invalid value for parameter '".concat(o,"': ").concat(JSON.stringify(n)),400);if(a.enum&&!a.enum.includes(n))throw new W("invalid value for parameter '".concat(o,"': ").concat(JSON.stringify(n)),400)}}}var J=M.plugins([function(e,r){var t=r.notice;(void 0===t||t)&&console.log("\x1b[46m\x1b[30m %s \x1b[0m\x1b[36m %s \x1b[0m","BITBUCKET CLOUD API LATEST UPDATES:","https://developer.atlassian.com/cloud/bitbucket")},function(e,r){r.auth&&(function(e){if(!("token"in e||e.username&&e.password))throw new Error('Invalid "auth" option: '.concat(JSON.stringify(e)))}(r.auth),e.requestHook.before(Q.bind(null,{client:e,auth:r.auth})))},function(e){e.hasNextPage=function(e){return Boolean(e.next)},e.getNextPage=z.bind(null,e,"next"),e.hasPreviousPage=function(e){return Boolean(e.previous)},e.getPreviousPage=z.bind(null,e,"previous")},function(e){e.registerEndpoints=Z.bind(null,e)},function(e){e.registerEndpoints(N)},function(e){e.requestHook.before($.bind(null,e))}]);class Y{constructor(e,r,t,s){this.workspace=e,this.repository=r,this.branch=t,this.latestCommit=s}}var X=t("AytR"),ee=t("fXoL"),re=t("mrSG"),te=t("XNiG"),se=t("quSY");class ie extends te.a{constructor(){super(...arguments),this.value=null,this.hasNext=!1,this.hasCompleted=!1}_subscribe(e){return this.hasError?(e.error(this.thrownError),se.a.EMPTY):this.hasCompleted&&this.hasNext?(e.next(this.value),e.complete(),se.a.EMPTY):super._subscribe(e)}next(e){this.hasCompleted||(this.value=e,this.hasNext=!0)}error(e){this.hasCompleted||super.error(e)}complete(){this.hasCompleted=!0,this.hasNext&&super.next(this.value),super.complete()}}var oe=t("fsGI"),ae=t("e8h1"),pe=t("TEn/");let ne=(()=>{class e{constructor(e,r,t,s){this.window=e,this.ngZone=r,this.storage=t,this.alertController=s,this.locked=!1,this.bitbucketClientResultAsyncSubject=new ie,this.newWindow=null}retrieveRawClient(e){return this.bitbucketClientResultAsyncSubject.isStopped||this.locked||(this.locked=!0,this.storage.get("accessToken-"+e).then(r=>{const t=r;if(this.isValidAccessToken(t)){const e=this.createBitbucketClientResult(t);this.bitbucketClientResultAsyncSubject.next(e),this.bitbucketClientResultAsyncSubject.complete()}else this.openAuthorizationWindow(e)},r=>this.openAuthorizationWindow(e)).catch(r=>this.openAuthorizationWindow(e))),this.bitbucketClientResultAsyncSubject}createBitbucketClientResult(e){const r=e.validTo.getTime()-(new Date).getTime();return this.createResult(e.accessToken,r)}isValidAccessToken(e){return e&&e.validTo.getTime()>(new Date).getTime()}openAuthorizationWindow(e){return Object(re.a)(this,void 0,void 0,(function*(){const r=yield this.alertController.create({header:"Wymagane uwierzytelnienie",message:"Aby kontynuowa\u0107 potrzeba uwierzytelnienia w serwisie Bitbucket.",buttons:[{text:"Anuluj",role:"cancel",cssClass:"secondary",handler:e=>{}},{text:"Przejd\u017a do Bitbucket",handler:()=>{const r=document.querySelector("head base").href,t=encodeURIComponent(r+"provider/bitbucket/oauth");this.newWindow=window.open(),this.newWindow.location.assign(r+"provider/bitbucket/redirect?client_id="+e+"&redirect_uri="+t);const s=new oe.a("bitbucketAuthorization");s.onmessage=this.onBitbucketAuthorizationMessage(s,e)}}]});yield r.present()}))}onBitbucketAuthorizationMessage(e,r){return t=>{const s=t.expires_in&&1e3*parseInt(t.expires_in);setTimeout(()=>{this.bitbucketClientResultAsyncSubject=new ie},s);const i=()=>{this.ngZone.run(()=>{const r=this.createResult(t.access_token,s);this.bitbucketClientResultAsyncSubject.next(r),this.bitbucketClientResultAsyncSubject.complete(),e.close(),this.newWindow=null,this.locked=!1})};if(t.access_token){this.newWindow.close();const e=new Date((new Date).getTime()+s),o=new le(t.access_token,e);this.storage.set("accessToken-"+r,o).then(()=>i(),()=>i()).catch(()=>i())}}}createResult(e,r){const t=new J({auth:{token:e}});return new ue(t,r)}listWorkspaces(e){return new s.a(r=>{e.workspaces.getWorkspaces({}).then(e=>{this.ngZone.run(()=>{r.next(e.data.values),r.complete()})}).catch(e=>r.error(e))})}findWorkspaceById(e,r){return new s.a(t=>{e.workspaces.getWorkspace({workspace:r}).then(e=>{this.ngZone.run(()=>{t.next(e.data),t.complete()})}).catch(e=>t.error(e))})}listRepositories(e,r){return new s.a(t=>{e.repositories.list({workspace:r}).then(e=>{this.ngZone.run(()=>{t.next(e.data.values),t.complete()})}).catch(e=>t.error(e))})}fetchLatestCommit(e,r,t){return new s.a(s=>{e.commits.list({repo_slug:t,workspace:r}).then(({data:e})=>{s.next(e.values[0].hash),s.complete()}).catch(e=>s.error(e))})}}return e.\u0275fac=function(r){return new(r||e)(ee.Vb(Window),ee.Vb(ee.D),ee.Vb(ae.b),ee.Vb(pe.b))},e.\u0275prov=ee.Kb({token:e,factory:e.\u0275fac,providedIn:"root"}),e})();class ue{constructor(e,r){this.bitbucket=e,this.expiresIn=r}}class le{constructor(e,r){this.accessToken=e,this.validTo=r}}var de=t("ofXK");const ce=["Slides"];function ge(e,r){if(1&e){const e=ee.Sb();ee.Rb(0,"ion-item",8),ee.Zb("click",(function(){ee.hc(e);const t=r.$implicit;return ee.bc().selectWorkspace(t)})),ee.Pb(1,"ion-ripple-effect"),ee.Rb(2,"ion-label"),ee.pc(3),ee.Qb(),ee.Qb()}if(2&e){const e=r.$implicit;ee.Eb(3),ee.qc(e.name)}}function me(e,r){if(1&e){const e=ee.Sb();ee.Rb(0,"ion-item",8),ee.Zb("click",(function(){ee.hc(e);const t=r.$implicit;return ee.bc().selectRepository(t)})),ee.Pb(1,"ion-ripple-effect"),ee.Rb(2,"ion-label"),ee.pc(3),ee.Qb(),ee.Qb()}if(2&e){const e=r.$implicit;ee.Eb(3),ee.qc(e.name)}}let ye=(()=>{class e{constructor(e,r,t,s){this.window=e,this.ngZone=r,this.bitbucketClientProviderService=t,this.modalController=s,this.workspaces=[],this.selectedWorkspace=null,this.repositories=[],this.selectedRepository=null,this.selectedBranch=null,this.slideOpts={initialSlide:0,centeredSlides:!0,pager:!0},this.bitbucket=null}ngAfterViewInit(){this.slides.lockSwipeToNext(!0)}authorize(){const e=X.a.fixedWorkspaceId;this.bitbucketClientProviderService.retrieveRawClient(X.a.bitbucketClientId).subscribe(r=>{this.bitbucket=r.bitbucket,e?this.bitbucketClientProviderService.findWorkspaceById(this.bitbucket,e).subscribe(e=>{this.workspaces=[e],this.nextSlide()}):this.bitbucketClientProviderService.listWorkspaces(this.bitbucket).subscribe(e=>{this.workspaces=e,this.nextSlide()})})}selectWorkspace(e){this.selectedWorkspace=e,this.bitbucketClientProviderService.listRepositories(this.bitbucket,e.uuid).subscribe(e=>{this.repositories=e,this.nextSlide()})}selectRepository(e){this.selectedRepository=e,this.selectedBranch=e.mainbranch,this.bitbucketClientProviderService.fetchLatestCommit(this.bitbucket,this.selectedWorkspace.uuid,e.name).subscribe(e=>{const r=new Y(this.selectedWorkspace,this.selectedRepository,this.selectedBranch,e);this.modalController.dismiss({bitbucket:this.bitbucket,config:r})})}nextSlide(){this.slides.lockSwipeToNext(!1),this.slides.slideNext(500),this.slides.lockSwipeToNext(!0)}dismissModal(){this.modalController.dismiss()}}return e.\u0275fac=function(r){return new(r||e)(ee.Ob(Window),ee.Ob(ee.D),ee.Ob(ne),ee.Ob(pe.J))},e.\u0275cmp=ee.Ib({type:e,selectors:[["app-bitbucket-wizard"]],viewQuery:function(e,r){var t;1&e&&ee.sc(ce,!0),2&e&&ee.gc(t=ee.ac())&&(r.slides=t.first)},decls:29,vars:3,consts:[["translucent",""],["slot","end"],[3,"click"],["fullscreen",""],["pager","true",2,"height","100%","width","100%","object-fit","contain",3,"options"],["Slides",""],[2,"height","100%","width","100%","display","block"],["button","true","detail","",3,"click",4,"ngFor","ngForOf"],["button","true","detail","",3,"click"]],template:function(e,r){1&e&&(ee.Rb(0,"ion-header",0),ee.Rb(1,"ion-toolbar"),ee.Rb(2,"ion-title"),ee.pc(3,"Integracja z Bitbucket"),ee.Qb(),ee.Rb(4,"ion-buttons",1),ee.Rb(5,"ion-button",2),ee.Zb("click",(function(){return r.dismissModal()})),ee.pc(6,"Zamknij"),ee.Qb(),ee.Qb(),ee.Qb(),ee.Qb(),ee.Rb(7,"ion-content",3),ee.Rb(8,"ion-slides",4,5),ee.Rb(10,"ion-slide",6),ee.Rb(11,"p"),ee.pc(12," Pierwszym krokiem do korzystania z danych z serwisu Bitbucket jest zalogowanie si\u0119 w tym serwisie. "),ee.Qb(),ee.Rb(13,"p"),ee.pc(14," Za chwil\u0119 otworzy si\u0119 nowe okno, kt\xf3re poprosi o zgod\u0119 na wykorzystanie danych w tej aplikacji. Twoje dane nie s\u0105 nigdzie przesy\u0142ane - zostaj\u0105 tylko w aplikacji. "),ee.Qb(),ee.Rb(15,"ion-button",2),ee.Zb("click",(function(){return r.authorize()})),ee.pc(16,"Zaloguj si\u0119"),ee.Qb(),ee.Qb(),ee.Rb(17,"ion-slide",6),ee.Rb(18,"ion-list"),ee.Rb(19,"ion-list-header"),ee.Rb(20,"ion-label"),ee.pc(21,"Wybierz workspace:"),ee.Qb(),ee.Qb(),ee.nc(22,ge,4,1,"ion-item",7),ee.Qb(),ee.Qb(),ee.Rb(23,"ion-slide",6),ee.Rb(24,"ion-list"),ee.Rb(25,"ion-list-header"),ee.Rb(26,"ion-label"),ee.pc(27,"Wybierz repozytorium:"),ee.Qb(),ee.Qb(),ee.nc(28,me,4,1,"ion-item",7),ee.Qb(),ee.Qb(),ee.Qb(),ee.Qb()),2&e&&(ee.Eb(8),ee.ec("options",r.slideOpts),ee.Eb(14),ee.ec("ngForOf",r.workspaces),ee.Eb(6),ee.ec("ngForOf",r.repositories))},directives:[pe.k,pe.G,pe.F,pe.g,pe.f,pe.h,pe.A,pe.z,pe.t,pe.u,pe.s,de.h,pe.o,pe.x],styles:[""]}),e})(),he=(()=>{class e{constructor(e,r,t){this.bitbucket=e,this.config=r,this.expiresIn=t}refresh(){return new s.a(e=>{this.bitbucket.commits.list({repo_slug:this.config.repository.uuid,workspace:this.config.workspace.uuid}).then(({data:r})=>{this.config.latestCommit=r.values[0].hash,e.next(r.values[0].hash),e.complete()}).catch(r=>e.error(r))})}resolvePath(r,t){return new s.a(s=>{this.bitbucket.source.read({node:this.config.latestCommit,path:r,repo_slug:this.config.repository.uuid,workspace:this.config.workspace.uuid,pagelen:e.PAGE_LEN,page:t}).then(e=>{s.next(e),s.complete()}).catch(e=>s.error(e))})}}return e.PAGE_LEN=100,e})();var qe=t("lJxs");let _e=(()=>{class e{constructor(e,r,t,s,i){this.window=e,this.ngZone=r,this.modalController=t,this.storage=s,this.bitbucketClientProviderService=i}list(){return new s.a(r=>{this.storage.get(e.PROVIDERS_KEY).then(e=>{r.next(e||[]),r.complete()}).catch(e=>r.error(e))})}createBitbucketClient(e){return this.bitbucketClientProviderService.retrieveRawClient(X.a.bitbucketClientId).pipe(Object(qe.a)(r=>new he(r.bitbucket,e,r.expiresIn)))}integrateNewRepository(){return new s.a(r=>{this.modalController.create({component:ye}).then(t=>{t.present().then(e=>e).catch(e=>{r.error(e)}),t.onDidDismiss().then(t=>{if(t.data){const{data:{bitbucket:s,config:i}}=t;this.storage.get(e.PROVIDERS_KEY).then(t=>{const o=t||[],a=o.findIndex(e=>e.repository.uuid===i.repository.uuid);a>=0&&o.splice(a,1),o.push(i),this.storage.set(e.PROVIDERS_KEY,o).then(()=>{const e=new he(s,i);r.next(e),r.complete()})})}return t}).catch(e=>{r.error(e)})}).catch(e=>{r.error(e)})})}refresh(r){return new s.a(t=>{this.storage.get(e.PROVIDERS_KEY).then(s=>{const i=s||[],o=i.findIndex(e=>e.repository.uuid===r.repository.uuid);o>=0&&i.splice(o,1),i.push(r),this.storage.set(e.PROVIDERS_KEY,i).then(()=>{t.next(),t.complete()})})})}delete(r){return new s.a(t=>{this.storage.get(e.PROVIDERS_KEY).then(s=>{const i=s||[],o=i.findIndex(e=>e.repository.uuid===r);o>=0&&i.splice(o,1),this.storage.set(e.PROVIDERS_KEY,i).then(()=>{t.next(),t.complete()})})})}}return e.PROVIDERS_KEY="providers.bitbucket",e.\u0275fac=function(r){return new(r||e)(ee.Vb(Window),ee.Vb(ee.D),ee.Vb(pe.J),ee.Vb(ae.b),ee.Vb(ne))},e.\u0275prov=ee.Kb({token:e,factory:e.\u0275fac,providedIn:"root"}),e})()},"5uH7":function(e,r){e.exports=function e(r,t,s,i){if("function"!=typeof s)throw new Error("method for before hook must be a function");return i||(i={}),Array.isArray(t)?t.reverse().reduce((function(t,s){return e.bind(null,r,s,t,i)}),s)():Promise.resolve().then((function(){return r.registry[t]?r.registry[t].reduce((function(e,r){return r.hook.bind(null,e,i)}),s)():s(i)}))}},EUoV:function(e,r){e.exports=function(e,r,t,s){var i=s;e.registry[t]||(e.registry[t]=[]),"before"===r&&(s=function(e,r){return Promise.resolve().then(i.bind(null,r)).then(e.bind(null,r))}),"after"===r&&(s=function(e,r){var t;return Promise.resolve().then(e.bind(null,r)).then((function(e){return i(t=e,r)})).then((function(){return t}))}),"error"===r&&(s=function(e,r){return Promise.resolve().then(e.bind(null,r)).catch((function(e){return i(e,r)}))}),e.registry[t].push({hook:s,orig:i})}},Fz9N:function(e,r,t){"use strict";t.d(r,"a",(function(){return s}));class s{constructor(e,r,t,s){this.id=e,this.name=r,this.type=t,this.config=s}}},PE4B:function(e,r,t){"use strict";var s=function(e){return function(e){return!!e&&"object"==typeof e}(e)&&!function(e){var r=Object.prototype.toString.call(e);return"[object RegExp]"===r||"[object Date]"===r||function(e){return e.$$typeof===i}(e)}(e)},i="function"==typeof Symbol&&Symbol.for?Symbol.for("react.element"):60103;function o(e,r){return!1!==r.clone&&r.isMergeableObject(e)?u(Array.isArray(e)?[]:{},e,r):e}function a(e,r,t){return e.concat(r).map((function(e){return o(e,t)}))}function p(e){return Object.keys(e).concat(function(e){return Object.getOwnPropertySymbols?Object.getOwnPropertySymbols(e).filter((function(r){return e.propertyIsEnumerable(r)})):[]}(e))}function n(e,r){try{return r in e}catch(t){return!1}}function u(e,r,t){(t=t||{}).arrayMerge=t.arrayMerge||a,t.isMergeableObject=t.isMergeableObject||s,t.cloneUnlessOtherwiseSpecified=o;var i=Array.isArray(r);return i===Array.isArray(e)?i?t.arrayMerge(e,r,t):function(e,r,t){var s={};return t.isMergeableObject(e)&&p(e).forEach((function(r){s[r]=o(e[r],t)})),p(r).forEach((function(i){(function(e,r){return n(e,r)&&!(Object.hasOwnProperty.call(e,r)&&Object.propertyIsEnumerable.call(e,r))})(e,i)||(s[i]=n(e,i)&&t.isMergeableObject(r[i])?function(e,r){if(!r.customMerge)return u;var t=r.customMerge(e);return"function"==typeof t?t:u}(i,t)(e[i],r[i],t):o(r[i],t))})),s}(e,r,t):o(r,t)}u.all=function(e,r){if(!Array.isArray(e))throw new Error("first argument should be an array");return e.reduce((function(e,t){return u(e,t,r)}),{})},e.exports=u},"R+3T":function(e,r){e.exports=function(e,r,t){if(e.registry[r]){var s=e.registry[r].map((function(e){return e.orig})).indexOf(t);-1!==s&&e.registry[r].splice(s,1)}}},Z8pk:function(e,r,t){var s=t("5uH7"),i=t("EUoV"),o=t("R+3T"),a=Function.bind,p=a.bind(a);function n(e,r,t){var s=p(o,null).apply(null,t?[r,t]:[r]);e.api={remove:s},e.remove=s,["before","error","after","wrap"].forEach((function(s){var o=t?[r,s,t]:[r,s];e[s]=e.api[s]=p(i,null).apply(null,o)}))}function u(){var e={registry:{}},r=s.bind(null,e);return n(r,e),r}var l=!1;function d(){return l||(console.warn('[before-after-hook]: "Hook()" repurposing warning, use "Hook.Collection()". Read more: https://git.io/upgrade-before-after-hook-to-1.4'),l=!0),u()}d.Singular=(function(){var e={registry:{}},r=s.bind(null,e,"h");return n(r,e,"h"),r}).bind(),d.Collection=u.bind(),e.exports=d,e.exports.Hook=d,e.exports.Singular=d.Singular,e.exports.Collection=d.Collection},"ct+p":function(e,r,t){"use strict";t.r(r),t.d(r,"HomePageModule",(function(){return w}));var s=t("TEn/"),i=t("ofXK"),o=t("3Pt+"),a=t("tyNb"),p=t("vkgz"),n=t("bOdf"),u=t("fXoL"),l=t("Fz9N"),d=t("lJxs"),c=t("4HZ0");let g=(()=>{class e{constructor(e){this.bitbucketServide=e}list(){return this.bitbucketServide.list().pipe(Object(d.a)(e=>e.map(e=>new l.a(`bb-${e.workspace.name}-${e.repository.name}`,`${e.workspace.name}/${e.repository.name}`,"BITBUCKET",e))))}create(){return this.bitbucketServide.integrateNewRepository().pipe(Object(d.a)(e=>{const r=e.config;return new l.a(`bb-${r.workspace.name}-${r.repository.name}`,`${r.workspace.name}/${r.repository.name}`,"BITBUCKET",r)}))}refresh(e){return this.bitbucketServide.refresh(e.config)}delete(e){return this.bitbucketServide.delete(e.config.repository.uuid)}}return e.\u0275fac=function(r){return new(r||e)(u.Vb(c.a))},e.\u0275prov=u.Kb({token:e,factory:e.\u0275fac,providedIn:"root"}),e})();function m(e,r){1&e&&(u.Rb(0,"ion-item"),u.Rb(1,"ion-label"),u.pc(2,"\u0141aduj\u0119"),u.Qb(),u.Pb(3,"ion-spinner"),u.Qb())}function y(e,r){1&e&&(u.Rb(0,"ion-item"),u.Rb(1,"ion-label"),u.pc(2,"Brak repozytori\xf3w. Dodaj pierwsze"),u.Qb(),u.Qb())}const h=function(e){return[e]};function q(e,r){if(1&e){const e=u.Sb();u.Rb(0,"ion-item-sliding"),u.Rb(1,"ion-item",7),u.Pb(2,"ion-icon",8),u.Rb(3,"ion-label"),u.pc(4),u.Qb(),u.Qb(),u.Rb(5,"ion-item-options",9),u.Rb(6,"ion-item-option",10),u.Zb("click",(function(){u.hc(e);const t=r.$implicit;return u.bc().delete(t)})),u.Pb(7,"ion-icon",11),u.pc(8," Usu\u0144 "),u.Qb(),u.Qb(),u.Qb()}if(2&e){const e=r.$implicit;u.Eb(1),u.ec("routerLink",u.fc(2,h,"file-system/"+e.id)),u.Eb(3),u.qc(e.name)}}const _=[{path:"",component:(()=>{class e{constructor(e){this.dataSourceFacade=e,this.dataSources=null}ngOnInit(){this.refresh().subscribe()}refresh(){return this.dataSourceFacade.list().pipe(Object(p.a)(e=>this.dataSources=e))}add(){this.dataSourceFacade.create().pipe(Object(n.a)(e=>this.refresh())).subscribe()}delete(e){return this.dataSourceFacade.delete(e).pipe(Object(n.a)(e=>this.refresh())).subscribe()}}return e.\u0275fac=function(r){return new(r||e)(u.Ob(g))},e.\u0275cmp=u.Ib({type:e,selectors:[["app-home"]],decls:14,vars:5,consts:[[3,"translucent"],[3,"fullscreen"],["horizontal","end","slot","fixed","vertical","bottom"],[3,"click"],["name","add"],[4,"ngIf"],[4,"ngFor","ngForOf"],["detail","",3,"routerLink"],["name","file-tray-stacked","slot","start"],["side","start"],["color","danger",3,"click"],["slot","start","name","trash"]],template:function(e,r){1&e&&(u.Rb(0,"ion-header",0),u.Rb(1,"ion-toolbar"),u.Rb(2,"ion-title"),u.pc(3," Ekran g\u0142\xf3wny "),u.Qb(),u.Qb(),u.Qb(),u.Rb(4,"ion-content",1),u.Rb(5,"ion-fab",2),u.Rb(6,"ion-fab-button",3),u.Zb("click",(function(){return r.add()})),u.Pb(7,"ion-icon",4),u.Qb(),u.Qb(),u.Rb(8,"ion-list"),u.Rb(9,"ion-list-header"),u.pc(10," Twoje miejsca danych "),u.Qb(),u.nc(11,m,4,0,"ion-item",5),u.nc(12,y,3,0,"ion-item",5),u.nc(13,q,9,4,"ion-item-sliding",6),u.Qb(),u.Qb()),2&e&&(u.ec("translucent",!0),u.Eb(4),u.ec("fullscreen",!0),u.Eb(7),u.ec("ngIf",null===r.dataSources),u.Eb(1),u.ec("ngIf",0===(null==r.dataSources?null:r.dataSources.length)),u.Eb(1),u.ec("ngForOf",r.dataSources))},directives:[s.k,s.G,s.F,s.h,s.i,s.j,s.l,s.t,s.u,i.i,i.h,s.o,s.s,s.B,s.r,s.L,a.h,s.q,s.p],styles:[""]}),e})()},{path:"file-system",loadChildren:()=>t.e(11).then(t.bind(null,"MWW1")).then(e=>e.FileSystemPageModule)}];let k=(()=>{class e{}return e.\u0275mod=u.Mb({type:e}),e.\u0275inj=u.Lb({factory:function(r){return new(r||e)},imports:[[a.i.forChild(_)],a.i]}),e})();var b=t("5M1D");let w=(()=>{class e{}return e.\u0275mod=u.Mb({type:e}),e.\u0275inj=u.Lb({factory:function(r){return new(r||e)},imports:[[s.H,i.b,o.a,k,b.a]]}),e})()},oY9k:function(e,r,t){"use strict";var s=function(){if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==s)return s;throw new Error("unable to locate global object")}();e.exports=r=s.fetch,s.fetch&&(r.default=s.fetch.bind(s)),r.Headers=s.Headers,r.Request=s.Request,r.Response=s.Response},yDwB:function(e,r){e.exports=function(e){return btoa(e)}}}]);